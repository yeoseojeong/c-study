//A
#include <stdio.h>
 
// ======== 코드 작성 영역 ========
size_t strlen(const char* str) {
 
    int len = 0;
    while (str[len]!=NULL)
    {
        len++;
    }
    return len;
     
}
// ===============================
 
int main() {
 
    char buffer[100];
    gets(buffer);
    printf("%zu", strlen(buffer));
 
    return 0;
}


//B
#include <stdio.h>
 
// ======== 코드 작성 영역 ========
size_t strcnt(const char* str, char c) {
    size_t count = 0;
 
    while (*str != NULL) {
        if (*str == c) {
            count++;
        }
        str++;
    }
 
    return count;
}
// ===============================
 
int main() {
    char buffer[100];
    char c;
    gets(buffer);
    scanf("%c", &c);
    printf("%zu", strcnt(buffer, c));
    return 0;
}


//C

#include <stdio.h>
 
// ======== 코드 작성 영역 ========
char* conv_strcpy(char* dest, const char* src, char find, char replace) {
    int i = 0;
 
    while (src[i] != NULL) {
        if (src[i] == find) {
            dest[i] = replace;
        }
        else {
            dest[i] = src[i];
        }
 
        i++;
    }
 
    dest[i] = NULL; //필수
 
    return dest;
}
// ===============================
 
int main() {
    char src[101];
    char dest[101];
    char find, replace;
 
    gets(src);
    scanf("%c %c", &find, &replace);
 
    printf("%s", conv_strcpy(dest, src, find, replace));
 
    return 0;
}


//D

#include <stdio.h>
 
// ======== 코드 작성 영역 ========
char* stricat(char* dest, const char* src) {
    
    int src_len = 0;
    while (src[src_len] != NULL) {
        src_len++;
    }
 
    int dest_len = 0;
    while (dest[dest_len] != NULL) {
        dest_len++;
    }
 
    for (int i = dest_len + src_len; i >= src_len; i--) {
        dest[i] = dest[i - src_len];
    }
 
    for (int i = 0; i < src_len; i++) {
        dest[i] = src[i];
    }
 
    return dest;
}
// ===============================
 
int main() {
 
    char src[101];
    char dest[101];
    gets(dest);
    gets(src);
 
    stricat(dest, src);
    printf("%s\n", dest);
 
    return 0;
}


//F

#include <stdio.h>
 
// ======== 코드 작성 영역 ========
char* strstr(const char* str, const char* substr) {
    while (*str != NULL)
    {
        const char* current_str = str;
        const char* current_substr = substr;
 
        
        while (*current_substr != NULL && *current_str == *current_substr)
        {
            current_str++;
            current_substr++;
        }
 
        
        if (*current_substr == NULL) 
        {
            return (char*)str;  
        }
 
        str++;  
    }
 
    return NULL;  
}
// ===============================
 
int main() {
 
    char str[101];
    char str2[101];
    gets(str);
    gets(str2);
 
    char* result = strstr(str, str2);
    if (result == NULL) {
        printf("%ld", result);
    }
    else {
        printf("%d", result - str);
    }
 
    return 0;
}


//G

#include <stdio.h>
 
// ======== 코드 작성 영역 ========
 
void reverseStringAtSpace(char* destination, const char* source) {
     
    int length = 0;
    while (source[length] != NULL)
    {
        length++;
    }
   
 
    
    int spaceIndex = length;
 
    for (int i = length - 1; i >= 0; i--)
    {
        if (source[i] == ' ' || i == 0) 
        {
            int start = (i == 0) ? 0 : i + 1;
            int end = (i == 0) ? spaceIndex : i;
             
            for (int j = start; j < spaceIndex; j++)
            {
                *destination = source[j];
                destination++;
            }
            
            if (i != 0)
            {
                *destination = ' ';
                destination++;
                spaceIndex = i;
            }
        }
    }
 
    *destination = NULL;
}
 
// ===============================
 
 
int main(int argc, char const* argv[])
{
    char str[104] = { 0 };
    char str2[104] = { 0 };
    gets(str);
    reverseStringAtSpace(str2, str);
    printf("%s", str2);
    return 0;
}


//H
#include <stdio.h>
 
int main() {
    char str[104] = { 0 };
    gets(str);
 
 
 
    int len = 0;
    while (str[len] != NULL)
    {
        len++;
    }
 
     
    int start = 0;
 
    for (int i = 0; i <= len; i++) 
    {
        if (str[i] == ' ' || str[i] == '\0') 
        {
            int end = i - 1;
 
            
            while (start < end) 
            {
                char temp = str[start];
                str[start] = str[end];
                str[end] = temp;
                start++;
                end--;
            }
 
             
            start = i + 1;
        }
    }
 
    printf("%s", str);  
 
    return 0;
}


//I

#include <stdio.h>
 
// ======== 코드 작성 영역 ========
 
 
void uint2str(char* destination, unsigned int n) {
    int i = 0;
 
    if (n == 0) 
    {
        destination[i++] = '0';
    }
    else
    {
    
        while (n > 0) 
        {
            destination[i++] = '0' + n % 10;
            n /= 10;
        }
    }
 
    int start = 0;
    int end = i - 1;
    while (start < end)
    {
         
        char temp = destination[start];
        destination[start] = destination[end];
        destination[end] = temp;
 
        start++;
        end--;
    }
 
    destination[i] = '\0';
}
 
// ===============================
 
int main(int argc, char const* argv[]) {
    unsigned int n;
    char str[20] = { 0 };
    scanf("%u", &n);
    uint2str(str, n);
    printf("%s", str);
    return 0;
}


//J

#include <stdio.h>
 
 
int main() {
    int n;
    scanf("%d", &n);
 
   
    char strings[101][101];
 
  
    for (int i = 0; i < n; i++) {
        scanf(" %[^\n]", strings[i]);
    }
 
     
    for (int i = n - 1; i >= 0; i--) {
        printf("%s\n", strings[i]);
    }
 
    return 0;
}


//K

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
 
int main() {
 
    unsigned char data[20];
    char arr[5];
    int cnt = 0;
 
    for (int i = 0; i < 20; i++)
    {
        scanf("%hhu", &data[i]);
    }
 
    for (int i = 0; i < 5; i++) 
    {
        scanf(" %c", &arr[i]);
    }
 
    
    for (int i = 0; i < 5; i++)
    {
        if (arr[i] == 'c') 
        {
            unsigned char* ptr = (unsigned char*)&data[cnt];
            printf("%u ", (unsigned int)*ptr);
            cnt = cnt + 1;
        }
        else if (arr[i] == 's')
        {
            unsigned short* ptr = (unsigned short*)&data[cnt];
            printf("%u ", (unsigned int)*ptr);
            cnt = cnt + 2;
        }
        else if (arr[i] == 'i')
        {
            unsigned int* ptr = (unsigned int*)&data[cnt];
            printf("%u ", *ptr);
            cnt = cnt + 4;
        }
        else {
            printf("error");
        }
    }
 
    return 0;
}
