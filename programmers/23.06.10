//첫번쨰로 나오는 음수

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>


int solution(int num_list[], size_t num_list_len) {
    int answer = -1;

    for (int i = 0; i < num_list_len; i++)
    {
        if (num_list[i] < 0)
        {
            answer = i;
            break;
        }
   }
    return answer;
}



//배열 만들기 3 (다른 사람 코드 참조)


#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int* solution(int arr[], size_t arr_len, int** intervals, size_t intervals_rows, size_t intervals_cols) {
    int a1 = intervals[0][0];
    int b1 = intervals[0][1];
    int a2 = intervals[1][0];
    int b2 = intervals[1][1];

    int* answer = (int*)malloc(sizeof(int) * (b1 - a1 + 1 + b2 - a2 + 1));
    int ansidx = 0;
    for(int i = a1; i <= b1; i++) 
    {
        answer[ansidx++] = arr[i];
    }
    for(int i = a2; i <= b2; i++) 
    {
       answer[ansidx++] = arr[i];
    }
    return answer;
}




//약수의 합


#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
  
   
    for (int i = 1; i <= n; i++)
    {
        if (n % i == 0)
        {
            answer += i;
        }
    
    }
   
    return answer;
}


//나머지가 1이 되는 수 찾기


#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    int i;
    for (i = 1; i <= n; i++)
    {
        if (n % i == 1)
        {
            return i;
        }
    }
}


//자릿수 더하기

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int n) {
    int answer = 0;
    while(n){
        answer += n%10;
        n /=10;
    }
    return answer;
}
