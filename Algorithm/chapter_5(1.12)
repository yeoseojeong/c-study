//5-7

#include<stdio.h>

void move(int no, int x, int y)
{
	if (no > 1)
	{
		move(no - 1, x, 6 - x - y);
	}
	printf("원반[%d]를 %d 기둥에서  %d 기둥으로 옮김\n", no, x, y);

	if (no > 1)
	{
		move(no - 1, 6 - x - y, y);
	}
}

int main(void)
{
	int n;
	printf("하노이의 탑\n원반개수: ");
	scanf("%d", &n);
	move(n, 1, 3);

	return 0;
}


//연습문제 7
#include <stdio.h>


void move(int no, int x, int y)
{
    char* name[] = { "A 기둥", "B 기둥", "C 기둥" };

    if (no > 1)
    {
        move(no - 1, x, 6 - x - y);     
    }
    printf("원반[%d]를(을) %s 기둥에서 %s 기둥으로 옮김\n", no, name[x - 1], name[y - 1]);  

    if (no > 1)
    {
      move(no - 1, 6 - x - y, y);   
    }


int main(void)
{
    int n;      

    printf("하노이의 탑\n원반 개수: ");
    scanf("%d", &n);

    move(n, 1, 3);

    return 0;
}


//5-9

#include <stdio.h>

int flag[8];        
int pos[8];        
void print(void)
{
    for (int i = 0; i < 8; i++)
          {
               printf("%2d", pos[i]);
          }
  putchar('\n');
}

void set(int i)
{
    for (int j = 0; j < 8; j++) 
    {
        if (!flag[j])
        {       
            pos[i] = j;
            if (i == 7)        
              { 
               print();
              }
            else
            {
                flag[j] = 1;
                set(i + 1);    
                flag[j] = 0;
            }
        }
    }
}

int main(void)
{
    for (int i = 0; i < 8; i++)
       {
         flag[i] = 0;
       }
    set(0);                   

    return 0;
}


//5-10

#include <stdio.h>

int flag_a[8];     
int flag_b[15];     
int flag_c[15];   
int pos[8];         


void print(void)
{
    for (int i = 0; i < 8; i++)
    {
        printf("%2d", pos[i]);
    }
      putchar('\n');
}
void set(int i)
{
    for (int j = 0; j < 8; j++) 
    {
        if (!flag_a[j] && !flag_b[i + j] && !flag_c[i - j + 7])
        {
            pos[i] = j;
            if (i == 7)
            {
                print();
            }
            else 
            {
                flag_a[j] = flag_b[i + j] = flag_c[i - j + 7] = 1;
                set(i + 1);    
                flag_a[j] = flag_b[i + j] = flag_c[i - j + 7] = 0;
            }
        }
    }
}

int main(void)
{
    for (int i = 0; i < 8; i++)
    {
        flag_a[i] = 0;
    }
    for (int i = 0; i < 15; i++)
    {
        flag_b[i] = flag_c[i] = 0;
    }
    set(0);                    

    return 0;
}
