//6-6


#include <stdio.h>
#include <stdlib.h>


void shell(int a[], int n)
{
    for (int h = n / 2; h > 0; h /= 2)
        for (int i = h; i < n; i++) {
            int tmp = a[i];
            int j;
            for (j = i - h; j >= 0 && a[j] > tmp; j -= h)
                a[j + h] = a[j];
            a[j + h] = tmp;
        }
}

int main(void)
{
    int nx;

    puts("셸 정렬");
    printf("요소 개수: ");
    scanf("%d", &nx);
    int* x = calloc(nx, sizeof(int));   

    for (int i = 0; i < nx; i++) {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }

    shell(x, nx);              

    puts("오름차순으로 정렬했습니다.");
    for (int i = 0; i < nx; i++)
        printf("x[%d] = %d\n", i, x[i]);

    free(x);                 

    return 0;
}



//6-7

#include <stdio.h>
#include <stdlib.h>


void shell(int a[], int n)
{
    int h;
    for (h = 1; h < n; h = h * 3 + 1);
   
    for (; h > 0; h /= 3)
        for (int i = h; i < n; i++)
        {
            int tmp = a[i];
            int j;
            for (j = i - h; j >= 0 && a[j] > tmp; j -= h)
            {
                a[j + h] = a[j];
            }
                a[j + h] = tmp;
        }
}

int main(void)
{
    int nx;

    puts("셸 정렬");
    printf("요소 개수: ");
    scanf("%d", &nx);
   
    int* x = calloc(nx, sizeof(int));  

    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }
  
    shell(x, nx);              
   
    puts("오름차순으로 정렬했습니다.);
       
        for (int i = 0; i < nx; i++)
        {
            printf("x[%d] = %d\n", i, x[i]);
        }
    free(x);            

    return 0;
}


//6-8

#include <stdio.h>
#include <stdlib.h>

#define swap(type, x, y)  do { type t = x; x = y; y = t; } while (0)


void partition(int a[], int n)
{
    int pl = 0;         
    int pr = n - 1;     
    int x = a[n / 2];   
   
    do {
        while (a[pl] < x) pl++;
        while (a[pr] > x) pr--;
        if (pl <= pr)
        {
            swap(int, a[pl], a[pr]);
            pl++;
            pr--;
        }
    } while (pl <= pr);
  
    printf("피벗의 값은 %d입니다.\n", x);
    printf("피벗 이하의 그룹\n");             
  
    for (int i = 0; i <= pl - 1; i++)
    {
        printf("%d ", a[i]);
    }
        putchar('\n');
    if (pl > pr + 1)
    {
        printf("피벗과 일치하는 그룹\n");            
       
        for (int i = pr + 1; i <= pl - 1; i++)
        {
            printf("%d ", a[i]);
        }
      putchar('\n');
    }
    printf("피벗 이상의 그룹\n");              
    for (int i = pr + 1; i < n; i++)
    {
        printf("%d ", a[i]);
    }
    putchar('\n');
}

int main(void)
{
    int nx;
    puts("배열을 나눕니다.");
    printf("요소 개수: ");
    scanf("%d", &nx);
  
    int *x = calloc(nx, sizeof(int));   
    
    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }
  
    partition(x, nx);                   
    
    free(x);                          

    return 0;
}



//6-9

#include <stdio.h>
#include <stdlib.h>
#define swap(type, x, y) do { type t = x; x = y; y = t; } while (0)


void quick(int a[], int left, int right)
{
    int pl = left;              
    int pr = right;             
    int x = a[(pl + pr) / 2];   
   
    do {
        while (a[pl] < x) pl++;
        while (a[pr] > x) pr--;
        if (pl <= pr)
        {
            swap(int, a[pl], a[pr]);
            pl++;
            pr--;
        }
    } while (pl <= pr);
   
    if (left < pr)  quick(a, left, pr);
    if (pl < right) quick(a, pl, right);
}

int main(void)
{
    int nx;
    puts("퀵 정렬");
    printf("요소 개수: ");
    scanf("%d", &nx);
    
    int* x = calloc(nx, sizeof(int));   
   
    for (int i = 0; i < nx; i++) 
    {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }
    
    quick(x, 0, nx - 1);                
   
    puts("오름차순으로 정렬했습니다.");
   
    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] = %d\n", i, x[i]);
    }
        free(x);                            

    return 0;
}


//6c-1


#include <stdio.h>
#include <stdlib.h>
#define swap(type, x, y) do { type t = x; x = y; y = t; } while (0)

void quick(int a[], int left, int right)
{
    int pl = left;             
    int pr = right;            
    int x = a[(pl + pr) / 2];   

    printf("a[%d]～a[%d]：{", left, right);
    for (int i = left; i < right; i++)
    {
        printf("%d , ", a[i]);
    }
        printf("%d}\n", a[right]);

    do {
        while (a[pl] < x) pl++;
        while (a[pr] > x) pr--;
        if (pl <= pr) 
        {
            swap(int, a[pl], a[pr]);
            pl++;
            pr--;
        }
    } while (pl <= pr);

    if (left < pr)  quick(a, left, pr);
    if (pl < right) quick(a, pl, right);
}

int main(void)
{
    int nx;
    puts("퀵 정렬");
    printf("요소 개수: ");
    scanf("%d", &nx);
   
    int* x = calloc(nx, sizeof(int));   
   
    for (int i = 0; i < nx; i++) 
    {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }
   
    quick(x, 0, nx - 1);                
    puts("오름차순으로 정렬했습니다.");
   
    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] = %d\n", i, x[i]);
    }
        free(x);                          

    return 0;
}


//6-10

#include <stdio.h>
#include <stdlib.h>
#include "IntStack.h"

#define swap(type, x, y) do { type t = x; x = y; y = t; } while (0)

void quick(int a[], int left, int right)
{
    IntStack lstack;        
    IntStack rstack;       

    Initialize(&lstack, right - left + 1);
    Initialize(&rstack, right - left + 1);

    Push(&lstack, left);
    Push(&rstack, right);

    while (!IsEmpty(&lstack))
    {
        int pl = (Pop(&lstack, &left), left);       
        int pr = (Pop(&rstack, &right), right);     
        int x = a[(left + right) / 2];            

        do {
            while (a[pl] < x) pl++;
            while (a[pr] > x) pr--;
            if (pl <= pr) 
            {
                swap(int, a[pl], a[pr]);
                pl++;
                pr--;
            }
        } while (pl <= pr);

        if (left < pr)
        {
            Push(&lstack, left);    
            Push(&rstack, pr);     
        }
        if (pl < right)
        {
            Push(&lstack, pl);      
            Push(&rstack, right);   
        }
    }
    Terminate(&lstack);
    Terminate(&rstack);
}

int main(void)
{
    int nx;

    puts("퀵 정렬");
    printf("요소 개수: ");
    scanf("%d", &nx);
   
    int* x = calloc(nx, sizeof(int));  

    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] : ", i);
        scanf("%d", &x[i]);
    }

    quick(x, 0, nx - 1);               

    puts("오름차순으로 정렬했습니다.");
    for (int i = 0; i < nx; i++)
    {
        printf("x[%d] = %d\n", i, x[i]);
    }
    free(x);                            

    return 0;
}




