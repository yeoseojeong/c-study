//3-1
#include<stdio.h>
#include<stdlib.h>

int search(const int a[], int n, int key)
{
	int i = 0;
	while (1)
	{
		if (i == n)
		{
			return -1;
		}
		if (a[i] == key)
		{
			return i;
		}
		i++;
	}
}


int main(void)
{
	int nx, ky;
	puts("선형 검색:");
	printf("요소 개수: ");
	scanf("%d", &nx);

	int* x = calloc(nx, sizeof(int));

	for (int i = 0; i < nx; i++)
	{
		printf("a[%d]=", i);
		scanf("%d", &x[i]);

	}
	printf("검색 값:");
	scanf("%d", &ky);

	int idx = search(x, nx, ky);
	if (idx == -1)
	{
		puts("검색에 실패하였습니다.");
	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, idx);
	}
	free(x);

	return 0;
}


//3-2
//3-2

#include<stdio.h>
#include<stdlib.h>

int search(const a[], int n, int key)
{
	for (int i = 0; i < n; i++)
	{
		if (a[i] == key)
		{
			return i;
		}
		
	}
	return -1;
}


int main(void)
{
	int nx, ky;
	puts("선형 검색:");
	printf("요소 개수: ");
	scanf("%d", &nx);

	int* x = calloc(nx, sizeof(int));

	for (int i = 0; i < nx; i++)
	{
		printf("a[%d]=", i);
		scanf("%d", &x[i]);

	}
	printf("검색 값:");
	scanf("%d", &ky);

	int idx = search(x, nx, ky);
	if (idx == -1)
	{
		puts("검색에 실패하였습니다.");
	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, idx);
	}
	free(x);

	return 0;
}


//3-3
#include<stdio.h>
#include<stdlib.h>

int search(int a[], int n, int key)
{
	int i = 0;

	a[n] = key;
	while (1)
	{
		if (a[i] == key)
		{
			break;
		}
		i++;
	}
	return i == n ? -1 : i;
}

int main(void)
{
	int nx, ky;

	puts("선형검색(보초법)");
	printf("요소 개수:");
	scanf("%d", &nx);

	int* x = calloc(nx + 1, sizeof(int));

	for (int i = 0; i < nx; i++)
	{
		printf("x[%d]:", i);
		scanf("%d", &x[i]);
	}

	printf("검색 값:");
	scanf("%d", &ky);

	int idx = search(x, nx, ky);

	if (idx == -1)
	{
		printf("검색에 실패하였습니다.");
	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, idx);
	}
	free(x);

	return 0;
}

//3-4

#include <stdio.h>
#include <stdlib.h>


int bin_search(const int a[], int n, int key)
{
    int pl = 0;                     
    int pr = n - 1;               

    do {
        int pc = (pl + pr) / 2;     
        if (a[pc] == key)          
            return pc;
        else if (a[pc] < key)
            pl = pc + 1;          
        else
            pr = pc - 1;          
    } while (pl <= pr);
    return -1;                      
}

int main(void)
{
    int nx, ky;

    puts("이진 검색");
    printf("요소 개수: ");
    scanf("%d", &nx);
    int* x = calloc(nx, sizeof(int));   
    printf("오름차순으로 입력하세요.\n");
    printf("x[0] : ");
    scanf("%d", &x[0]);
    for (int i = 1; i < nx; i++) {
        do {
            printf("x[%d] : ", i);
            scanf("%d", &x[i]);
        } while (x[i] < x[i - 1]);      
    }
    printf("검색값: ");
    scanf("%d", &ky);
    int idx = bin_search(x, nx, ky);    
    if (idx == -1)
        puts("검색에 실패했습니다.");
    else
        printf("%d는(은) x[%d]에 있습니다.\n", ky, idx);
    free(x);                           

    return 0;
}


//연습문제 1

#include<stdio.h>
#include<stdlib.h>



int search(int a[], int n, int key)
{
	int i = 0;

	a[n] = key;
	for (i = 0; i < n; i++)
	{
		if (a[i] == key)
		{
			break;
		}
	
		i++;
	}
	return i == n ? -1 : i;

}

int main(void)
{
	int nx, ky;

	puts("선형검색(보초법)");
	printf("요소 개수:");
	scanf("%d", &nx);

	int* x = calloc(nx + 1, sizeof(int));

	for (int i = 0; i < nx; i++)
	{
		printf("x[%d]:", i);
		scanf("%d", &x[i]);
	}

	printf("검색 값:");
	scanf("%d", &ky);

	int idx = search(x, nx, ky);

	if (idx == -1)
	{
		printf("검색에 실패하였습니다.");
	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, idx);
	}
	free(x);

	return 0;
}





