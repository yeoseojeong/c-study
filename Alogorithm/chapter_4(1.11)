//5-1

#include<stdio.h>

int factorial(int n)
{
	if (n > 0)
	{
		return n * factorial(n - 1);
	}
	else
	{
		return 1;
	}
}

int main(void)
{
	int x;
	printf("정수를 입력하세요: ");
	scanf("%d", &x);
	printf("%d의 순차곱셈값은 %d 입니다.\n", x, factorial(x));

	return 0;
}

//5-2
#include<stdio.h>

int gcd(int x, int y)
{
	if (y == 0)
	{
		return x;
	}
	else
	{
		return gcd(y, x % y);
	}
}

int main(void)
{
	int x, y;
	puts("두 정수의 최대공약수를 구합니다.");
	printf("정수를 입력하세요: ");
	scanf("%d", &x);
	printf("정수를 입력하세요.: ");
	scanf("%d", &y);
	printf("최대공약수는 %d입니다.\n", gcd(x, y));

	return 0;
}

//연습문제 1
#include <stdio.h>


int factorial(int n)
{
	int fact = 1;

	while (n > 1)
	{

		fact =fact * n;
		n--;
	}
		return fact;
}

int main(void)
{
	int x;

	printf("정수를 입력하세요.: ");
	scanf("%d", &x);

	printf("%d의 순차곱셈값은 %d입니다.\n", x, factorial(x));

	return 0;
}


//연습문제 2

#include <stdio.h>


int gcd(int x, int y)
{
    while (y != 0)
    {
        int temp = y;
        y = x % y;
        x = temp;
    }
    return x;
}

int main(void)
{
    int x, y;

    puts("두 정수의 최대공약수를 구합니다.");

    printf("정수를 입력하세요.: ");
    scanf("%d", &x);

    printf("정수를 입력하세요.: ");
    scanf("%d", &y);

    printf("최대공약수는 %d입니다.\n", gcd(x, y));

    return 0;
}

//5-3
#include<stdio.h>

void recur(int n)
{
	if (n > 0)
	{
		recur(n - 1);
		printf("%d\n", n);
		recur(n - 2);
	}
}

int main(void)
{
	int x;
	printf("정수를 입력하세요: ");
	scanf("%d", &x);
	recur(x);

	return 0;
}


//5-4

#include<stdio.h>

void recur(int n)
{
	Top:
	if (n > 0)
	{
		recur(n - 1);
		printf("%d\n", n);
		n=n - 2;
		goto Top;
	}
}

int main(void)
{
	int x;
	printf("정수를 입력하세요: ");
	scanf("%d", &x);
	recur(x);

	return 0;
}


//5-5
#include<stdio.h>

void recur(int n)
{
	IntStack stk;
	Initialize(&stk, 100);

Top:
	if (n > 0)
	{
		Push(&stk, n);
		n = n - 1;
		goto Top;
	}
	if (!IsEmpty(&stk))
	{
		Pop(&stk, &n);
		printf("%d\n", n);
		n = n - 2;
		goto Top;
	}
	Terminate(&stk);
}

int main(void)
{
	int x;
	printf("정수를 입력하세요: ");
	scanf("%d", &x);
	recur(x);

	return 0;
}

//5-6

#include <stdio.h>

static char memo[128][1024];        


void recur(int n) {
    if (memo[n + 1][0] != '\0')
    {
        printf("%s", memo[n + 1]);
    }
    else 
    {
        if (n > 0) 
        {
            recur(n - 1);
            printf("%d\n", n);
            recur(n - 2);
            sprintf(memo[n + 1], "%s%d\n%s", memo[n], n, memo[n - 1]);
        }
        else
        {
            strcpy(memo[n + 1], "");
        }
    }
}

int main(void)
{
    int x;

    printf("정수를 입력하세요: ");
    scanf("%d", &x);

    recur(x);

    return 0;
}

