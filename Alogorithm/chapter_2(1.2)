//2-1

#include <stdio.h>

#define N   5                       
int main()
{
    int a[N];                       
    for (int i = 0; i < N; i++) 
    {   
        printf("a[%d] : ", i);
        scanf("%d", &a[i]);
    }
    puts("각 요소의 값");
    for (int i = 0; i < N; i++) 
    {    
        printf("a[%d] = %d\n", i, a[i]);
    }

    return 0;
}


//2-2
#include<stdio.h>
int main(void)
{
	int a[5] = { 1,2,3,4,5 };
	int na = sizeof(a) / sizeof(a[0]);
	printf("배열 a의 요소 개수는 %d입니다.\n", na);

	for (int i = 0; i < na; i++)
	{
		printf("a[%d]=%d\n", i, a[i]);
	}

	return 0;
}



//2-3
#include<stdio.h>
#include<stdlib.h>
int main(void)
{
	int* x = calloc(1, sizeof(int));
	if (x == NULL)
	{
		puts("메모리 할당에 실패하였습니다.\n");
	}
	else
	{
		*x = 57;
		printf("*x=%d\n", *x);
		free(x);
	}
	return 0;

}

//2-4

#include<stdio.h>
#include<stdlib.h>
#define _CRT_SECURE_NO_WARINGS

int main(void)
{
	int na;
	printf("요소 개수");
	scanf("%d", &na);
	int* a = calloc(na, sizeof(int));

	if (a == NULL)
	{
		puts("메모리확보에 실패하였습니다.");
	}
	else
	{
		printf("%d개의 정수를 입력하세요.\n", na);
		for (int i = 0; i < na; i++)
		{
			printf("a[%d]:", i);
			scanf("%d", &a[i]);
		}

		printf("각 요솟값은 아래와 같습니다.\n");
		for (int i = 0; i < na; i++)
		{
			printf("a[%d]=%d\n", i, a[i]);


		}
		free(a);
	}
	return 0;

}


//2-5
#include<stdio.h>
#include<stdlib.h>
int maxof(const int a[], int n)
{
	int max = a[0];

	for (int i = 1; i < n; i++)
	{
		if (a[i] > max)
		{
			max = a[i];
		}
	}
	return max;
}

int main(void)
{
	int number;
	printf("사람 수:");
	scanf("%d", &number);

	int* height = calloc(number, sizeof(int));
	printf("%d명의 키를 입력하세요.\n", number);
	for (int i = 0; i < number; i++)
	{
		printf("height[%d]:", i);
		scanf("%d", &height[i]);
	}

	printf("최댓값은 %d 입니다.\n", maxof(height, number));
	free(height);

	return 0;
}



//2-6

#include<stdio.h>
#include<time.h>
#include<stdlib.h>

int maxof(const int a[], int n)
{
	int max = a[0];
	for (int i = 1; i < n; i++)
	{
		if (a[i] > max)
		{
			max = a[i];
		}

	}
	return max;
}

int main(void)
{
	int number;
	printf("사람 수:");
	scanf("%d", &number);
	int* height = calloc(number, sizeof(int));
	srand(time(NULL));

	for (int i = 0; i < number; i++)
	{
		height[i] = 100 + rand() % 90; //100~189의 난수를 생성.대입
		printf("height[%d]=%d\n", i, height[i]);
	}
	printf("최대값은 %d입니다.\n", maxof(height, number));
	free(height);
	return 0;
}


//2-7

#include<stdio.h>
#include<stdlib.h>

#define swap(type,x,y) do{type t=x; x=y;y=t;}while(0);

void ary_reverse(int a[], int n)
{
	for (int i = 0; i < n / 2; i++)
	{
		swap(int, a[i], a[n - i - 1]);
	}
}

int main(void)
{
	int nx;

	printf("요소 개수:");
	scanf("%d", &nx);
	int* x = calloc(nx, sizeof(int));

	for (int i = 0; i < nx; i++)
	{
		printf("x[%d]:", i);
		scanf("%d", &x[i]);
	}

	ary_reverse(x, nx);

	printf("배열의 요소를 역순으로 정렬하였습니다.\n");
	for (int i = 0; i < nx; i++)
	{
		printf("x[%d]=%d\n", i, x[i]);
	}
	free(x);

	return 0;
}


//2-8A,2-8B
#include<stdio.h>

#define swap(type,x,y) do{type t=x; x=y; y=t;}while(0)

int card_conv(unsigned x, int n, char d[])
{
	char dchar[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	int digits = 0;

	if(x==0)
	{
		d[digits++] = dchar[0];
	}
	else
		while (x)
		{
			d[digits++] = dchar[x%n];
			x /= n;
		}

	for (int i = 0; i < digits / 2; i++)
	{
		swap(char, d[i], d[digits - i - 1]);
	}

	return digits;
	
}
int main(void)
{
	puts("10진수를 기수 변환합니다.");

	int retry;

	do {
		unsigned no;
		int cd;
		char cno[512];

		printf("변환하는 음이 아닌 정수:");
		scanf("%u", &no);

		do {
			printf("어떤 진수로 변환할까요?(2-36):");
			scanf("%d", &cd);
		} while (cd < 2 || cd>36);
	

	int dno = card_conv(no, cd, cno);

	printf("%d진수로는", cd);
	for (int i = 0; i < dno; i++)
	{
		printf("%c", cno[i]);
	}
	printf("입니다.\n");

	printf("한번 더 할까요?(1-네/0-아니오):");
	scanf("%d", &retry);
}while (retry == 1);

return 0;
}

