//3-5

#include<stdio.h>
#include<stdlib.h>

int int_cmp(const int* a, const int* b)
{
	if (*a < *b)
	{
		return -1;
	}
	else if (*a > *b)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

int main(void)
{
	int nx, ky;
	puts("bsearch 함수를 사용하여 검색");
	printf("요소 개수: ");
	scanf("%d", &nx);
	int* x = calloc(nx, sizeof(int));

	printf("오름차순으로 입력하세요.\n");
	printf("x[0]:");
	scanf("%d", &x[0]);

	for (int i = 1; i < nx; i++)
	{
		do {
			printf("x[%d]: ", i);
			scanf("%d", &x[i]);
		} while (x[i] < x[i - 1]);
	}

	printf("검색값:");
	scanf("%d", &ky);
	int* p = bsearch(
		&ky,
		x,
		nx,
		sizeof(int),
		(int(*)(const void*, const void*))int_cmp
	);

	if (p == NULL)
	{
		puts("검색에 실패하였습니다.");

	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, (int)(p - x));
	}
	free(x);

	return 0;
}



//3-6

#include<stdio.h>
#include<stdlib.h>

int int_cmpr(const int* a, const int* b)
{
	if (*a < *b)
	{
		return 1;
	}
	else if (*a > *b)
	{
		return -1;
	}
	else
	{
		return 0;
	}
}

int main(void)
{
	int nx, ky;
	puts("bsearch 함수를 사용하여 검색");
	printf("요소 개수: ");
	scanf("%d", &nx);
	int* x = calloc(nx, sizeof(int));

	printf("내림차순으로 입력하세요.\n");
	printf("x[0]:");
	scanf("%d", &x[0]);

	for (int i = 1; i < nx; i++)
	{
		do {
			printf("x[%d]: ", i);
			scanf("%d", &x[i]);
		} while (x[i] > x[i - 1]);
	}

	printf("검색값:");
	scanf("%d", &ky);
	int* p = bsearch(
		&ky,
		x,
		nx,
		sizeof(int),
		(int(*)(const void*, const void*))int_cmpr
	);

	if (p == NULL)
	{
		puts("검색에 실패하였습니다.");

	}
	else
	{
		printf("%d는 x[%d]에 있습니다.\n", ky, (int)(p - x));
	}
	free(x);

	return 0;
}


//3c-1

#include<stdio.h>

int sum(int x1, int x2)
{
	return x1 + x2;
}

int mul(int x1, int x2)
{
	return x1 * x2;
}

void kuku(int (*calc)(int, int))
{
	for (int i = 1; i <= 9; i++)
	{
		for (int j = 1; j <= 9; j++)
		{
			printf("%3d", (*calc)(i, j));
		}
		putchar('\n');
	}
}

int main(void)
{
	puts("덧셈표");
	kuku(sum);
	puts("\n 곱셈표");
	kuku(mul);

	return 0;

}


//3-7
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char name[10];  
    int  height;   
    int  weight;    
} Person;


int npcmp(const Person* x, const Person* y)
{
    return strcmp(x->name, y->name);
}

int main(void)
{
    Person x[] = {             
        {"김영준", 179, 79},      
        {"박현규", 172, 63},
        {"이수진", 176, 52},
        {"최윤미", 165, 51},
        {"함진아", 181, 73},
        {"홍연의", 172, 84},
    };
    int nx = sizeof(x) / sizeof(x[0]);     
    int retry;
    puts("이름으로 검색합니다.");
    do {
        Person temp;
        printf("이름: ");
        scanf("%s", temp.name);
        Person* p = bsearch(&temp, x, nx, sizeof(Person),
            (int (*)(const void*, const void*))npcmp);
        if (p == NULL)
        {
            puts("검색에 실패했습니다.");
        }
        else 
        {
            puts("검색 성공!! 아래 요소를 찾았습니다.");
            printf("x[%d] : %s %dcm %dkg\n",
                (int)(p - x), p->name, p->height, p->weight);
        }
        
        printf("다시 검색할까요?(1) 예/(0)아니오: ");
        scanf("%d", &retry);
    } while (retry == 1);

    return 0;
}
